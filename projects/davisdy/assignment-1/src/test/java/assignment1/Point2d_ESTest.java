/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 03 02:11:24 GMT 2017
 */

package assignment1;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import assignment1.Point2d;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Point2d_ESTest extends Point2d_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Point2d point2d0 = new Point2d();
      point2d0.setXY(463.8079, (-1773.3939139880813));
      assertEquals((-1773.3939139880813), point2d0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Point2d point2d0 = new Point2d((-4318.5229), 1672.3);
      Point2d point2d1 = new Point2d(point2d0);
      assertEquals((-4318.5229), point2d0.getX(), 0.01);
      assertEquals(1672.3, point2d0.getY(), 0.01);
      assertEquals((-4318.5229), point2d1.getX(), 0.01);
      assertEquals(1672.3, point2d1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Point2d point2d0 = new Point2d((-1.0), 1429.11912631);
      double double0 = point2d0.getY();
      assertEquals((-1.0), point2d0.getX(), 0.01);
      assertEquals(1429.11912631, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Point2d point2d0 = new Point2d((-4752.12), 842.0);
      assertEquals(842.0, point2d0.getY(), 0.01);
      
      point2d0.setY((-4752.12));
      double double0 = point2d0.getY();
      assertEquals((-4752.12), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Point2d point2d0 = new Point2d();
      double double0 = point2d0.getX();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Point2d point2d0 = new Point2d(132.572031, 132.572031);
      double double0 = point2d0.getX();
      assertEquals(132.572031, point2d0.getY(), 0.01);
      assertEquals(132.572031, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Point2d point2d0 = new Point2d();
      double double0 = point2d0.distanceFromOrigin();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Point2d point2d0 = new Point2d((-440.068136614), 1098.0831164);
      Point2d point2d1 = new Point2d((-4416.62), (-440.068136614));
      double double0 = point2d0.distanceFrom(point2d1);
      assertEquals((-440.068136614), point2d1.getY(), 0.01);
      assertEquals(4263.6690771385165, double0, 0.01);
      assertEquals((-4416.62), point2d1.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Point2d point2d0 = new Point2d();
      // Undeclared exception!
      try { 
        point2d0.distanceFrom((Point2d) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("assignment1.Point2d", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Point2d point2d0 = new Point2d();
      point2d0.dprint("");
      assertEquals(0.0, point2d0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Point2d point2d0 = new Point2d((-4318.5229), 1672.3);
      double double0 = point2d0.distanceFrom(point2d0);
      assertEquals(0.0, double0, 0.01);
      assertEquals((-4318.5229), point2d0.getX(), 0.01);
      assertEquals(1672.3, point2d0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Point2d point2d0 = new Point2d((-4752.12), 842.0);
      double double0 = point2d0.getX();
      assertEquals((-4752.12), double0, 0.01);
      assertEquals(842.0, point2d0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Point2d point2d0 = new Point2d((-4752.12), 842.0);
      assertEquals((-4752.12), point2d0.getX(), 0.01);
      
      point2d0.setX(0.0);
      assertEquals(842.0, point2d0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Point2d point2d0 = new Point2d();
      double double0 = point2d0.getY();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Point2d point2d0 = new Point2d();
      point2d0.setDebug(true);
      point2d0.dprint((String) null);
      assertEquals(0.0, point2d0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Point2d point2d0 = null;
      try {
        point2d0 = new Point2d((Point2d) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("assignment1.Point2d", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Point2d point2d0 = new Point2d((-4318.5229), 1672.3);
      String string0 = point2d0.toString();
      assertEquals("(-4318.5229, 1672.3)", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Point2d point2d0 = new Point2d((-1.0), 1429.11912631);
      double double0 = point2d0.distanceFromOrigin();
      assertEquals(1429.1194761758227, double0, 0.01);
      assertEquals(1429.11912631, point2d0.getY(), 0.01);
      assertEquals((-1.0), point2d0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Point2d point2d0 = new Point2d();
      String string0 = point2d0.toStringForXY();
      assertEquals("(0.0, 0.0", string0);
  }
}
